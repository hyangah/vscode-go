name: Long Tests

on: [push]

jobs:
  build:
    name: ${{ matrix.os }} ${{ matrix.version }} ${{ matrix.go }}
    runs-on: ${{ matrix.os }}

    # Not containing 'SKIP CI' in the commit message AND
    # (Either the official repository, or the commit message contains 'FORCE RUN CI')
    if: (github.repository == 'golang/vscode-go' || contains(github.event.head_commit.message, 'FORCE RUN CI')) && !contains(github.event.head_commit.message, 'SKIP CI')
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest] # TODO: reenable macos-latest
        version: ['stable']
        go: ['1.15', '1.16', '1.17']

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
         go-version: ${{ matrix.go }}
         stable: '!contains(${{ matrix.go }}, "beta") && !contains(${{ matrix.go }}, "rc")'

      - name: Install dependencies
        run: npm ci
      
      - name: Compile
        run: npm run vscode:prepublish

      # TODO: use `go install` when we all move to 1.16+ (see build/all.bash)
      - name: Install Go tools (Modules mode)
        run: |
            go version
            go run ./tools/installtools
        env:
          GO111MODULE: on
          EXT: "${{ matrix.os == 'windows-latest' && '.exe' || ''}}"
          
      - name: Run unit tests
        run: npm run unit-test
        
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm run test
        env:
          CODE_VERSION: ${{ matrix.version }}
      
      - name: Lint check
        run: npm run lint
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.version == 'stable' }}
